/*
 * This file is generated by jOOQ.
*/
package com.jooq.my_schema.tables;


import com.jooq.my_schema.Indexes;
import com.jooq.my_schema.Keys;
import com.jooq.my_schema.MySchema;
import com.jooq.my_schema.tables.records.PassportRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Passport extends TableImpl<PassportRecord> {

    private static final long serialVersionUID = 2034294426;

    /**
     * The reference instance of <code>MY_SCHEMA.PASSPORT</code>
     */
    public static final Passport PASSPORT = new Passport();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PassportRecord> getRecordType() {
        return PassportRecord.class;
    }

    /**
     * The column <code>MY_SCHEMA.PASSPORT.ID</code>.
     */
    public final TableField<PassportRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>MY_SCHEMA.PASSPORT.PASSPORT_NUMBER</code>.
     */
    public final TableField<PassportRecord, String> PASSPORT_NUMBER = createField("PASSPORT_NUMBER", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>MY_SCHEMA.PASSPORT.FK_CUST_ID</code>.
     */
    public final TableField<PassportRecord, Integer> FK_CUST_ID = createField("FK_CUST_ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>MY_SCHEMA.PASSPORT</code> table reference
     */
    public Passport() {
        this(DSL.name("PASSPORT"), null);
    }

    /**
     * Create an aliased <code>MY_SCHEMA.PASSPORT</code> table reference
     */
    public Passport(String alias) {
        this(DSL.name(alias), PASSPORT);
    }

    /**
     * Create an aliased <code>MY_SCHEMA.PASSPORT</code> table reference
     */
    public Passport(Name alias) {
        this(alias, PASSPORT);
    }

    private Passport(Name alias, Table<PassportRecord> aliased) {
        this(alias, aliased, null);
    }

    private Passport(Name alias, Table<PassportRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MySchema.MY_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CONSTRAINT_INDEX_7, Indexes.CONSTRAINT_INDEX_77, Indexes.PRIMARY_KEY_7);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<PassportRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PASSPORT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PassportRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_7;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PassportRecord>> getKeys() {
        return Arrays.<UniqueKey<PassportRecord>>asList(Keys.CONSTRAINT_7, Keys.CONSTRAINT_772);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<PassportRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<PassportRecord, ?>>asList(Keys.CONSTRAINT_77);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Passport as(String alias) {
        return new Passport(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Passport as(Name alias) {
        return new Passport(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Passport rename(String name) {
        return new Passport(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Passport rename(Name name) {
        return new Passport(name, null);
    }
}
