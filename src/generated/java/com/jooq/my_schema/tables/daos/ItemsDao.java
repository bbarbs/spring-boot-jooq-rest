/*
 * This file is generated by jOOQ.
*/
package com.jooq.my_schema.tables.daos;


import com.jooq.my_schema.tables.Items;
import com.jooq.my_schema.tables.records.ItemsRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ItemsDao extends DAOImpl<ItemsRecord, com.jooq.my_schema.tables.pojos.Items, Integer> {

    /**
     * Create a new ItemsDao without any configuration
     */
    public ItemsDao() {
        super(Items.ITEMS, com.jooq.my_schema.tables.pojos.Items.class);
    }

    /**
     * Create a new ItemsDao with an attached configuration
     */
    public ItemsDao(Configuration configuration) {
        super(Items.ITEMS, com.jooq.my_schema.tables.pojos.Items.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(com.jooq.my_schema.tables.pojos.Items object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>ID IN (values)</code>
     */
    public List<com.jooq.my_schema.tables.pojos.Items> fetchById(Integer... values) {
        return fetch(Items.ITEMS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>ID = value</code>
     */
    public com.jooq.my_schema.tables.pojos.Items fetchOneById(Integer value) {
        return fetchOne(Items.ITEMS.ID, value);
    }

    /**
     * Fetch records that have <code>CODE IN (values)</code>
     */
    public List<com.jooq.my_schema.tables.pojos.Items> fetchByCode(String... values) {
        return fetch(Items.ITEMS.CODE, values);
    }

    /**
     * Fetch records that have <code>ITEM_NAME IN (values)</code>
     */
    public List<com.jooq.my_schema.tables.pojos.Items> fetchByItemName(String... values) {
        return fetch(Items.ITEMS.ITEM_NAME, values);
    }

    /**
     * Fetch records that have <code>DESCRIPTION IN (values)</code>
     */
    public List<com.jooq.my_schema.tables.pojos.Items> fetchByDescription(String... values) {
        return fetch(Items.ITEMS.DESCRIPTION, values);
    }
}
