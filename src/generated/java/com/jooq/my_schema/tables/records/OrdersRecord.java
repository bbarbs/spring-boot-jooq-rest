/*
 * This file is generated by jOOQ.
*/
package com.jooq.my_schema.tables.records;


import com.jooq.my_schema.tables.Orders;
import com.jooq.my_schema.tables.interfaces.IOrders;

import java.math.BigDecimal;
import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrdersRecord extends UpdatableRecordImpl<OrdersRecord> implements Record5<Integer, Timestamp, String, BigDecimal, Integer>, IOrders {

    private static final long serialVersionUID = 568657402;

    /**
     * Setter for <code>MY_SCHEMA.ORDERS.ID</code>.
     */
    @Override
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>MY_SCHEMA.ORDERS.ID</code>.
     */
    @Override
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>MY_SCHEMA.ORDERS.DATE_ORDER</code>.
     */
    @Override
    public void setDateOrder(Timestamp value) {
        set(1, value);
    }

    /**
     * Getter for <code>MY_SCHEMA.ORDERS.DATE_ORDER</code>.
     */
    @Override
    public Timestamp getDateOrder() {
        return (Timestamp) get(1);
    }

    /**
     * Setter for <code>MY_SCHEMA.ORDERS.STATUS</code>.
     */
    @Override
    public void setStatus(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>MY_SCHEMA.ORDERS.STATUS</code>.
     */
    @Override
    public String getStatus() {
        return (String) get(2);
    }

    /**
     * Setter for <code>MY_SCHEMA.ORDERS.AMOUNT</code>.
     */
    @Override
    public void setAmount(BigDecimal value) {
        set(3, value);
    }

    /**
     * Getter for <code>MY_SCHEMA.ORDERS.AMOUNT</code>.
     */
    @Override
    public BigDecimal getAmount() {
        return (BigDecimal) get(3);
    }

    /**
     * Setter for <code>MY_SCHEMA.ORDERS.FK_CUST_ID</code>.
     */
    @Override
    public void setFkCustId(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>MY_SCHEMA.ORDERS.FK_CUST_ID</code>.
     */
    @Override
    public Integer getFkCustId() {
        return (Integer) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, Timestamp, String, BigDecimal, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, Timestamp, String, BigDecimal, Integer> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Orders.ORDERS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field2() {
        return Orders.ORDERS.DATE_ORDER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Orders.ORDERS.STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field4() {
        return Orders.ORDERS.AMOUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return Orders.ORDERS.FK_CUST_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component2() {
        return getDateOrder();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component4() {
        return getAmount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component5() {
        return getFkCustId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value2() {
        return getDateOrder();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value4() {
        return getAmount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getFkCustId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrdersRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrdersRecord value2(Timestamp value) {
        setDateOrder(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrdersRecord value3(String value) {
        setStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrdersRecord value4(BigDecimal value) {
        setAmount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrdersRecord value5(Integer value) {
        setFkCustId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrdersRecord values(Integer value1, Timestamp value2, String value3, BigDecimal value4, Integer value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(IOrders from) {
        setId(from.getId());
        setDateOrder(from.getDateOrder());
        setStatus(from.getStatus());
        setAmount(from.getAmount());
        setFkCustId(from.getFkCustId());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends IOrders> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OrdersRecord
     */
    public OrdersRecord() {
        super(Orders.ORDERS);
    }

    /**
     * Create a detached, initialised OrdersRecord
     */
    public OrdersRecord(Integer id, Timestamp dateOrder, String status, BigDecimal amount, Integer fkCustId) {
        super(Orders.ORDERS);

        set(0, id);
        set(1, dateOrder);
        set(2, status);
        set(3, amount);
        set(4, fkCustId);
    }
}
