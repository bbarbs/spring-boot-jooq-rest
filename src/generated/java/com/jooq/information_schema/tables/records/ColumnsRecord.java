/*
 * This file is generated by jOOQ.
*/
package com.jooq.information_schema.tables.records;


import com.jooq.information_schema.tables.Columns;
import com.jooq.information_schema.tables.interfaces.IColumns;

import javax.annotation.Generated;

import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ColumnsRecord extends TableRecordImpl<ColumnsRecord> implements IColumns {

    private static final long serialVersionUID = -1685758505;

    /**
     * Setter for <code>INFORMATION_SCHEMA.COLUMNS.TABLE_CATALOG</code>.
     */
    @Override
    public void setTableCatalog(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.COLUMNS.TABLE_CATALOG</code>.
     */
    @Override
    public String getTableCatalog() {
        return (String) get(0);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.COLUMNS.TABLE_SCHEMA</code>.
     */
    @Override
    public void setTableSchema(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.COLUMNS.TABLE_SCHEMA</code>.
     */
    @Override
    public String getTableSchema() {
        return (String) get(1);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.COLUMNS.TABLE_NAME</code>.
     */
    @Override
    public void setTableName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.COLUMNS.TABLE_NAME</code>.
     */
    @Override
    public String getTableName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.COLUMNS.COLUMN_NAME</code>.
     */
    @Override
    public void setColumnName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.COLUMNS.COLUMN_NAME</code>.
     */
    @Override
    public String getColumnName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.COLUMNS.ORDINAL_POSITION</code>.
     */
    @Override
    public void setOrdinalPosition(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.COLUMNS.ORDINAL_POSITION</code>.
     */
    @Override
    public Integer getOrdinalPosition() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.COLUMNS.COLUMN_DEFAULT</code>.
     */
    @Override
    public void setColumnDefault(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.COLUMNS.COLUMN_DEFAULT</code>.
     */
    @Override
    public String getColumnDefault() {
        return (String) get(5);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.COLUMNS.IS_NULLABLE</code>.
     */
    @Override
    public void setIsNullable(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.COLUMNS.IS_NULLABLE</code>.
     */
    @Override
    public String getIsNullable() {
        return (String) get(6);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.COLUMNS.DATA_TYPE</code>.
     */
    @Override
    public void setDataType(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.COLUMNS.DATA_TYPE</code>.
     */
    @Override
    public Integer getDataType() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.COLUMNS.CHARACTER_MAXIMUM_LENGTH</code>.
     */
    @Override
    public void setCharacterMaximumLength(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.COLUMNS.CHARACTER_MAXIMUM_LENGTH</code>.
     */
    @Override
    public Integer getCharacterMaximumLength() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.COLUMNS.CHARACTER_OCTET_LENGTH</code>.
     */
    @Override
    public void setCharacterOctetLength(Integer value) {
        set(9, value);
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.COLUMNS.CHARACTER_OCTET_LENGTH</code>.
     */
    @Override
    public Integer getCharacterOctetLength() {
        return (Integer) get(9);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.COLUMNS.NUMERIC_PRECISION</code>.
     */
    @Override
    public void setNumericPrecision(Integer value) {
        set(10, value);
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.COLUMNS.NUMERIC_PRECISION</code>.
     */
    @Override
    public Integer getNumericPrecision() {
        return (Integer) get(10);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.COLUMNS.NUMERIC_PRECISION_RADIX</code>.
     */
    @Override
    public void setNumericPrecisionRadix(Integer value) {
        set(11, value);
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.COLUMNS.NUMERIC_PRECISION_RADIX</code>.
     */
    @Override
    public Integer getNumericPrecisionRadix() {
        return (Integer) get(11);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.COLUMNS.NUMERIC_SCALE</code>.
     */
    @Override
    public void setNumericScale(Integer value) {
        set(12, value);
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.COLUMNS.NUMERIC_SCALE</code>.
     */
    @Override
    public Integer getNumericScale() {
        return (Integer) get(12);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.COLUMNS.CHARACTER_SET_NAME</code>.
     */
    @Override
    public void setCharacterSetName(String value) {
        set(13, value);
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.COLUMNS.CHARACTER_SET_NAME</code>.
     */
    @Override
    public String getCharacterSetName() {
        return (String) get(13);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.COLUMNS.COLLATION_NAME</code>.
     */
    @Override
    public void setCollationName(String value) {
        set(14, value);
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.COLUMNS.COLLATION_NAME</code>.
     */
    @Override
    public String getCollationName() {
        return (String) get(14);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.COLUMNS.TYPE_NAME</code>.
     */
    @Override
    public void setTypeName(String value) {
        set(15, value);
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.COLUMNS.TYPE_NAME</code>.
     */
    @Override
    public String getTypeName() {
        return (String) get(15);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.COLUMNS.NULLABLE</code>.
     */
    @Override
    public void setNullable(Integer value) {
        set(16, value);
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.COLUMNS.NULLABLE</code>.
     */
    @Override
    public Integer getNullable() {
        return (Integer) get(16);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.COLUMNS.IS_COMPUTED</code>.
     */
    @Override
    public void setIsComputed(Boolean value) {
        set(17, value);
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.COLUMNS.IS_COMPUTED</code>.
     */
    @Override
    public Boolean getIsComputed() {
        return (Boolean) get(17);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.COLUMNS.SELECTIVITY</code>.
     */
    @Override
    public void setSelectivity(Integer value) {
        set(18, value);
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.COLUMNS.SELECTIVITY</code>.
     */
    @Override
    public Integer getSelectivity() {
        return (Integer) get(18);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.COLUMNS.CHECK_CONSTRAINT</code>.
     */
    @Override
    public void setCheckConstraint(String value) {
        set(19, value);
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.COLUMNS.CHECK_CONSTRAINT</code>.
     */
    @Override
    public String getCheckConstraint() {
        return (String) get(19);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.COLUMNS.SEQUENCE_NAME</code>.
     */
    @Override
    public void setSequenceName(String value) {
        set(20, value);
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.COLUMNS.SEQUENCE_NAME</code>.
     */
    @Override
    public String getSequenceName() {
        return (String) get(20);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.COLUMNS.REMARKS</code>.
     */
    @Override
    public void setRemarks(String value) {
        set(21, value);
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.COLUMNS.REMARKS</code>.
     */
    @Override
    public String getRemarks() {
        return (String) get(21);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.COLUMNS.SOURCE_DATA_TYPE</code>.
     */
    @Override
    public void setSourceDataType(Short value) {
        set(22, value);
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.COLUMNS.SOURCE_DATA_TYPE</code>.
     */
    @Override
    public Short getSourceDataType() {
        return (Short) get(22);
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(IColumns from) {
        setTableCatalog(from.getTableCatalog());
        setTableSchema(from.getTableSchema());
        setTableName(from.getTableName());
        setColumnName(from.getColumnName());
        setOrdinalPosition(from.getOrdinalPosition());
        setColumnDefault(from.getColumnDefault());
        setIsNullable(from.getIsNullable());
        setDataType(from.getDataType());
        setCharacterMaximumLength(from.getCharacterMaximumLength());
        setCharacterOctetLength(from.getCharacterOctetLength());
        setNumericPrecision(from.getNumericPrecision());
        setNumericPrecisionRadix(from.getNumericPrecisionRadix());
        setNumericScale(from.getNumericScale());
        setCharacterSetName(from.getCharacterSetName());
        setCollationName(from.getCollationName());
        setTypeName(from.getTypeName());
        setNullable(from.getNullable());
        setIsComputed(from.getIsComputed());
        setSelectivity(from.getSelectivity());
        setCheckConstraint(from.getCheckConstraint());
        setSequenceName(from.getSequenceName());
        setRemarks(from.getRemarks());
        setSourceDataType(from.getSourceDataType());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends IColumns> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ColumnsRecord
     */
    public ColumnsRecord() {
        super(Columns.COLUMNS);
    }

    /**
     * Create a detached, initialised ColumnsRecord
     */
    public ColumnsRecord(String tableCatalog, String tableSchema, String tableName, String columnName, Integer ordinalPosition, String columnDefault, String isNullable, Integer dataType, Integer characterMaximumLength, Integer characterOctetLength, Integer numericPrecision, Integer numericPrecisionRadix, Integer numericScale, String characterSetName, String collationName, String typeName, Integer nullable, Boolean isComputed, Integer selectivity, String checkConstraint, String sequenceName, String remarks, Short sourceDataType) {
        super(Columns.COLUMNS);

        set(0, tableCatalog);
        set(1, tableSchema);
        set(2, tableName);
        set(3, columnName);
        set(4, ordinalPosition);
        set(5, columnDefault);
        set(6, isNullable);
        set(7, dataType);
        set(8, characterMaximumLength);
        set(9, characterOctetLength);
        set(10, numericPrecision);
        set(11, numericPrecisionRadix);
        set(12, numericScale);
        set(13, characterSetName);
        set(14, collationName);
        set(15, typeName);
        set(16, nullable);
        set(17, isComputed);
        set(18, selectivity);
        set(19, checkConstraint);
        set(20, sequenceName);
        set(21, remarks);
        set(22, sourceDataType);
    }
}
