/*
 * This file is generated by jOOQ.
*/
package com.jooq.information_schema.tables.interfaces;


import java.io.Serializable;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface ISequences extends Serializable {

    /**
     * Setter for <code>INFORMATION_SCHEMA.SEQUENCES.SEQUENCE_CATALOG</code>.
     */
    public void setSequenceCatalog(String value);

    /**
     * Getter for <code>INFORMATION_SCHEMA.SEQUENCES.SEQUENCE_CATALOG</code>.
     */
    public String getSequenceCatalog();

    /**
     * Setter for <code>INFORMATION_SCHEMA.SEQUENCES.SEQUENCE_SCHEMA</code>.
     */
    public void setSequenceSchema(String value);

    /**
     * Getter for <code>INFORMATION_SCHEMA.SEQUENCES.SEQUENCE_SCHEMA</code>.
     */
    public String getSequenceSchema();

    /**
     * Setter for <code>INFORMATION_SCHEMA.SEQUENCES.SEQUENCE_NAME</code>.
     */
    public void setSequenceName(String value);

    /**
     * Getter for <code>INFORMATION_SCHEMA.SEQUENCES.SEQUENCE_NAME</code>.
     */
    public String getSequenceName();

    /**
     * Setter for <code>INFORMATION_SCHEMA.SEQUENCES.CURRENT_VALUE</code>.
     */
    public void setCurrentValue(Long value);

    /**
     * Getter for <code>INFORMATION_SCHEMA.SEQUENCES.CURRENT_VALUE</code>.
     */
    public Long getCurrentValue();

    /**
     * Setter for <code>INFORMATION_SCHEMA.SEQUENCES.INCREMENT</code>.
     */
    public void setIncrement(Long value);

    /**
     * Getter for <code>INFORMATION_SCHEMA.SEQUENCES.INCREMENT</code>.
     */
    public Long getIncrement();

    /**
     * Setter for <code>INFORMATION_SCHEMA.SEQUENCES.IS_GENERATED</code>.
     */
    public void setIsGenerated(Boolean value);

    /**
     * Getter for <code>INFORMATION_SCHEMA.SEQUENCES.IS_GENERATED</code>.
     */
    public Boolean getIsGenerated();

    /**
     * Setter for <code>INFORMATION_SCHEMA.SEQUENCES.REMARKS</code>.
     */
    public void setRemarks(String value);

    /**
     * Getter for <code>INFORMATION_SCHEMA.SEQUENCES.REMARKS</code>.
     */
    public String getRemarks();

    /**
     * Setter for <code>INFORMATION_SCHEMA.SEQUENCES.CACHE</code>.
     */
    public void setCache(Long value);

    /**
     * Getter for <code>INFORMATION_SCHEMA.SEQUENCES.CACHE</code>.
     */
    public Long getCache();

    /**
     * Setter for <code>INFORMATION_SCHEMA.SEQUENCES.MIN_VALUE</code>.
     */
    public void setMinValue(Long value);

    /**
     * Getter for <code>INFORMATION_SCHEMA.SEQUENCES.MIN_VALUE</code>.
     */
    public Long getMinValue();

    /**
     * Setter for <code>INFORMATION_SCHEMA.SEQUENCES.MAX_VALUE</code>.
     */
    public void setMaxValue(Long value);

    /**
     * Getter for <code>INFORMATION_SCHEMA.SEQUENCES.MAX_VALUE</code>.
     */
    public Long getMaxValue();

    /**
     * Setter for <code>INFORMATION_SCHEMA.SEQUENCES.IS_CYCLE</code>.
     */
    public void setIsCycle(Boolean value);

    /**
     * Getter for <code>INFORMATION_SCHEMA.SEQUENCES.IS_CYCLE</code>.
     */
    public Boolean getIsCycle();

    /**
     * Setter for <code>INFORMATION_SCHEMA.SEQUENCES.ID</code>.
     */
    public void setId(Integer value);

    /**
     * Getter for <code>INFORMATION_SCHEMA.SEQUENCES.ID</code>.
     */
    public Integer getId();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface ISequences
     */
    public void from(com.jooq.information_schema.tables.interfaces.ISequences from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface ISequences
     */
    public <E extends com.jooq.information_schema.tables.interfaces.ISequences> E into(E into);
}
