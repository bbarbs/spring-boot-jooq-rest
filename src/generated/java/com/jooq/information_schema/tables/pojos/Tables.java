/*
 * This file is generated by jOOQ.
*/
package com.jooq.information_schema.tables.pojos;


import com.jooq.information_schema.tables.interfaces.ITables;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Tables implements ITables {

    private static final long serialVersionUID = 1655374107;

    private String  tableCatalog;
    private String  tableSchema;
    private String  tableName;
    private String  tableType;
    private String  storageType;
    private String  sql;
    private String  remarks;
    private Long    lastModification;
    private Integer id;
    private String  typeName;
    private String  tableClass;
    private Long    rowCountEstimate;

    public Tables() {}

    public Tables(Tables value) {
        this.tableCatalog = value.tableCatalog;
        this.tableSchema = value.tableSchema;
        this.tableName = value.tableName;
        this.tableType = value.tableType;
        this.storageType = value.storageType;
        this.sql = value.sql;
        this.remarks = value.remarks;
        this.lastModification = value.lastModification;
        this.id = value.id;
        this.typeName = value.typeName;
        this.tableClass = value.tableClass;
        this.rowCountEstimate = value.rowCountEstimate;
    }

    public Tables(
        String  tableCatalog,
        String  tableSchema,
        String  tableName,
        String  tableType,
        String  storageType,
        String  sql,
        String  remarks,
        Long    lastModification,
        Integer id,
        String  typeName,
        String  tableClass,
        Long    rowCountEstimate
    ) {
        this.tableCatalog = tableCatalog;
        this.tableSchema = tableSchema;
        this.tableName = tableName;
        this.tableType = tableType;
        this.storageType = storageType;
        this.sql = sql;
        this.remarks = remarks;
        this.lastModification = lastModification;
        this.id = id;
        this.typeName = typeName;
        this.tableClass = tableClass;
        this.rowCountEstimate = rowCountEstimate;
    }

    @Override
    public String getTableCatalog() {
        return this.tableCatalog;
    }

    @Override
    public void setTableCatalog(String tableCatalog) {
        this.tableCatalog = tableCatalog;
    }

    @Override
    public String getTableSchema() {
        return this.tableSchema;
    }

    @Override
    public void setTableSchema(String tableSchema) {
        this.tableSchema = tableSchema;
    }

    @Override
    public String getTableName() {
        return this.tableName;
    }

    @Override
    public void setTableName(String tableName) {
        this.tableName = tableName;
    }

    @Override
    public String getTableType() {
        return this.tableType;
    }

    @Override
    public void setTableType(String tableType) {
        this.tableType = tableType;
    }

    @Override
    public String getStorageType() {
        return this.storageType;
    }

    @Override
    public void setStorageType(String storageType) {
        this.storageType = storageType;
    }

    @Override
    public String getSql() {
        return this.sql;
    }

    @Override
    public void setSql(String sql) {
        this.sql = sql;
    }

    @Override
    public String getRemarks() {
        return this.remarks;
    }

    @Override
    public void setRemarks(String remarks) {
        this.remarks = remarks;
    }

    @Override
    public Long getLastModification() {
        return this.lastModification;
    }

    @Override
    public void setLastModification(Long lastModification) {
        this.lastModification = lastModification;
    }

    @Override
    public Integer getId() {
        return this.id;
    }

    @Override
    public void setId(Integer id) {
        this.id = id;
    }

    @Override
    public String getTypeName() {
        return this.typeName;
    }

    @Override
    public void setTypeName(String typeName) {
        this.typeName = typeName;
    }

    @Override
    public String getTableClass() {
        return this.tableClass;
    }

    @Override
    public void setTableClass(String tableClass) {
        this.tableClass = tableClass;
    }

    @Override
    public Long getRowCountEstimate() {
        return this.rowCountEstimate;
    }

    @Override
    public void setRowCountEstimate(Long rowCountEstimate) {
        this.rowCountEstimate = rowCountEstimate;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Tables (");

        sb.append(tableCatalog);
        sb.append(", ").append(tableSchema);
        sb.append(", ").append(tableName);
        sb.append(", ").append(tableType);
        sb.append(", ").append(storageType);
        sb.append(", ").append(sql);
        sb.append(", ").append(remarks);
        sb.append(", ").append(lastModification);
        sb.append(", ").append(id);
        sb.append(", ").append(typeName);
        sb.append(", ").append(tableClass);
        sb.append(", ").append(rowCountEstimate);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(ITables from) {
        setTableCatalog(from.getTableCatalog());
        setTableSchema(from.getTableSchema());
        setTableName(from.getTableName());
        setTableType(from.getTableType());
        setStorageType(from.getStorageType());
        setSql(from.getSql());
        setRemarks(from.getRemarks());
        setLastModification(from.getLastModification());
        setId(from.getId());
        setTypeName(from.getTypeName());
        setTableClass(from.getTableClass());
        setRowCountEstimate(from.getRowCountEstimate());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends ITables> E into(E into) {
        into.from(this);
        return into;
    }
}
