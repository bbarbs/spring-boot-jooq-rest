/*
 * This file is generated by jOOQ.
*/
package com.jooq.information_schema.tables.pojos;


import com.jooq.information_schema.tables.interfaces.IConstants;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Constants implements IConstants {

    private static final long serialVersionUID = 256567973;

    private String  constantCatalog;
    private String  constantSchema;
    private String  constantName;
    private Integer dataType;
    private String  remarks;
    private String  sql;
    private Integer id;

    public Constants() {}

    public Constants(Constants value) {
        this.constantCatalog = value.constantCatalog;
        this.constantSchema = value.constantSchema;
        this.constantName = value.constantName;
        this.dataType = value.dataType;
        this.remarks = value.remarks;
        this.sql = value.sql;
        this.id = value.id;
    }

    public Constants(
        String  constantCatalog,
        String  constantSchema,
        String  constantName,
        Integer dataType,
        String  remarks,
        String  sql,
        Integer id
    ) {
        this.constantCatalog = constantCatalog;
        this.constantSchema = constantSchema;
        this.constantName = constantName;
        this.dataType = dataType;
        this.remarks = remarks;
        this.sql = sql;
        this.id = id;
    }

    @Override
    public String getConstantCatalog() {
        return this.constantCatalog;
    }

    @Override
    public void setConstantCatalog(String constantCatalog) {
        this.constantCatalog = constantCatalog;
    }

    @Override
    public String getConstantSchema() {
        return this.constantSchema;
    }

    @Override
    public void setConstantSchema(String constantSchema) {
        this.constantSchema = constantSchema;
    }

    @Override
    public String getConstantName() {
        return this.constantName;
    }

    @Override
    public void setConstantName(String constantName) {
        this.constantName = constantName;
    }

    @Override
    public Integer getDataType() {
        return this.dataType;
    }

    @Override
    public void setDataType(Integer dataType) {
        this.dataType = dataType;
    }

    @Override
    public String getRemarks() {
        return this.remarks;
    }

    @Override
    public void setRemarks(String remarks) {
        this.remarks = remarks;
    }

    @Override
    public String getSql() {
        return this.sql;
    }

    @Override
    public void setSql(String sql) {
        this.sql = sql;
    }

    @Override
    public Integer getId() {
        return this.id;
    }

    @Override
    public void setId(Integer id) {
        this.id = id;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Constants (");

        sb.append(constantCatalog);
        sb.append(", ").append(constantSchema);
        sb.append(", ").append(constantName);
        sb.append(", ").append(dataType);
        sb.append(", ").append(remarks);
        sb.append(", ").append(sql);
        sb.append(", ").append(id);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(IConstants from) {
        setConstantCatalog(from.getConstantCatalog());
        setConstantSchema(from.getConstantSchema());
        setConstantName(from.getConstantName());
        setDataType(from.getDataType());
        setRemarks(from.getRemarks());
        setSql(from.getSql());
        setId(from.getId());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends IConstants> E into(E into) {
        into.from(this);
        return into;
    }
}
