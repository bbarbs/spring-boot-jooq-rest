/*
 * This file is generated by jOOQ.
*/
package com.jooq.information_schema.tables.pojos;


import com.jooq.information_schema.tables.interfaces.ISequences;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Sequences implements ISequences {

    private static final long serialVersionUID = -1317255903;

    private String  sequenceCatalog;
    private String  sequenceSchema;
    private String  sequenceName;
    private Long    currentValue;
    private Long    increment;
    private Boolean isGenerated;
    private String  remarks;
    private Long    cache;
    private Long    minValue;
    private Long    maxValue;
    private Boolean isCycle;
    private Integer id;

    public Sequences() {}

    public Sequences(Sequences value) {
        this.sequenceCatalog = value.sequenceCatalog;
        this.sequenceSchema = value.sequenceSchema;
        this.sequenceName = value.sequenceName;
        this.currentValue = value.currentValue;
        this.increment = value.increment;
        this.isGenerated = value.isGenerated;
        this.remarks = value.remarks;
        this.cache = value.cache;
        this.minValue = value.minValue;
        this.maxValue = value.maxValue;
        this.isCycle = value.isCycle;
        this.id = value.id;
    }

    public Sequences(
        String  sequenceCatalog,
        String  sequenceSchema,
        String  sequenceName,
        Long    currentValue,
        Long    increment,
        Boolean isGenerated,
        String  remarks,
        Long    cache,
        Long    minValue,
        Long    maxValue,
        Boolean isCycle,
        Integer id
    ) {
        this.sequenceCatalog = sequenceCatalog;
        this.sequenceSchema = sequenceSchema;
        this.sequenceName = sequenceName;
        this.currentValue = currentValue;
        this.increment = increment;
        this.isGenerated = isGenerated;
        this.remarks = remarks;
        this.cache = cache;
        this.minValue = minValue;
        this.maxValue = maxValue;
        this.isCycle = isCycle;
        this.id = id;
    }

    @Override
    public String getSequenceCatalog() {
        return this.sequenceCatalog;
    }

    @Override
    public void setSequenceCatalog(String sequenceCatalog) {
        this.sequenceCatalog = sequenceCatalog;
    }

    @Override
    public String getSequenceSchema() {
        return this.sequenceSchema;
    }

    @Override
    public void setSequenceSchema(String sequenceSchema) {
        this.sequenceSchema = sequenceSchema;
    }

    @Override
    public String getSequenceName() {
        return this.sequenceName;
    }

    @Override
    public void setSequenceName(String sequenceName) {
        this.sequenceName = sequenceName;
    }

    @Override
    public Long getCurrentValue() {
        return this.currentValue;
    }

    @Override
    public void setCurrentValue(Long currentValue) {
        this.currentValue = currentValue;
    }

    @Override
    public Long getIncrement() {
        return this.increment;
    }

    @Override
    public void setIncrement(Long increment) {
        this.increment = increment;
    }

    @Override
    public Boolean getIsGenerated() {
        return this.isGenerated;
    }

    @Override
    public void setIsGenerated(Boolean isGenerated) {
        this.isGenerated = isGenerated;
    }

    @Override
    public String getRemarks() {
        return this.remarks;
    }

    @Override
    public void setRemarks(String remarks) {
        this.remarks = remarks;
    }

    @Override
    public Long getCache() {
        return this.cache;
    }

    @Override
    public void setCache(Long cache) {
        this.cache = cache;
    }

    @Override
    public Long getMinValue() {
        return this.minValue;
    }

    @Override
    public void setMinValue(Long minValue) {
        this.minValue = minValue;
    }

    @Override
    public Long getMaxValue() {
        return this.maxValue;
    }

    @Override
    public void setMaxValue(Long maxValue) {
        this.maxValue = maxValue;
    }

    @Override
    public Boolean getIsCycle() {
        return this.isCycle;
    }

    @Override
    public void setIsCycle(Boolean isCycle) {
        this.isCycle = isCycle;
    }

    @Override
    public Integer getId() {
        return this.id;
    }

    @Override
    public void setId(Integer id) {
        this.id = id;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Sequences (");

        sb.append(sequenceCatalog);
        sb.append(", ").append(sequenceSchema);
        sb.append(", ").append(sequenceName);
        sb.append(", ").append(currentValue);
        sb.append(", ").append(increment);
        sb.append(", ").append(isGenerated);
        sb.append(", ").append(remarks);
        sb.append(", ").append(cache);
        sb.append(", ").append(minValue);
        sb.append(", ").append(maxValue);
        sb.append(", ").append(isCycle);
        sb.append(", ").append(id);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(ISequences from) {
        setSequenceCatalog(from.getSequenceCatalog());
        setSequenceSchema(from.getSequenceSchema());
        setSequenceName(from.getSequenceName());
        setCurrentValue(from.getCurrentValue());
        setIncrement(from.getIncrement());
        setIsGenerated(from.getIsGenerated());
        setRemarks(from.getRemarks());
        setCache(from.getCache());
        setMinValue(from.getMinValue());
        setMaxValue(from.getMaxValue());
        setIsCycle(from.getIsCycle());
        setId(from.getId());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends ISequences> E into(E into) {
        into.from(this);
        return into;
    }
}
