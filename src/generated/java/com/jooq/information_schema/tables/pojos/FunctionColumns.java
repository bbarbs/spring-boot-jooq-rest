/*
 * This file is generated by jOOQ.
*/
package com.jooq.information_schema.tables.pojos;


import com.jooq.information_schema.tables.interfaces.IFunctionColumns;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FunctionColumns implements IFunctionColumns {

    private static final long serialVersionUID = -566443586;

    private String  aliasCatalog;
    private String  aliasSchema;
    private String  aliasName;
    private String  javaClass;
    private String  javaMethod;
    private Integer columnCount;
    private Integer pos;
    private String  columnName;
    private Integer dataType;
    private String  typeName;
    private Integer precision;
    private Short   scale;
    private Short   radix;
    private Short   nullable;
    private Short   columnType;
    private String  remarks;
    private String  columnDefault;

    public FunctionColumns() {}

    public FunctionColumns(FunctionColumns value) {
        this.aliasCatalog = value.aliasCatalog;
        this.aliasSchema = value.aliasSchema;
        this.aliasName = value.aliasName;
        this.javaClass = value.javaClass;
        this.javaMethod = value.javaMethod;
        this.columnCount = value.columnCount;
        this.pos = value.pos;
        this.columnName = value.columnName;
        this.dataType = value.dataType;
        this.typeName = value.typeName;
        this.precision = value.precision;
        this.scale = value.scale;
        this.radix = value.radix;
        this.nullable = value.nullable;
        this.columnType = value.columnType;
        this.remarks = value.remarks;
        this.columnDefault = value.columnDefault;
    }

    public FunctionColumns(
        String  aliasCatalog,
        String  aliasSchema,
        String  aliasName,
        String  javaClass,
        String  javaMethod,
        Integer columnCount,
        Integer pos,
        String  columnName,
        Integer dataType,
        String  typeName,
        Integer precision,
        Short   scale,
        Short   radix,
        Short   nullable,
        Short   columnType,
        String  remarks,
        String  columnDefault
    ) {
        this.aliasCatalog = aliasCatalog;
        this.aliasSchema = aliasSchema;
        this.aliasName = aliasName;
        this.javaClass = javaClass;
        this.javaMethod = javaMethod;
        this.columnCount = columnCount;
        this.pos = pos;
        this.columnName = columnName;
        this.dataType = dataType;
        this.typeName = typeName;
        this.precision = precision;
        this.scale = scale;
        this.radix = radix;
        this.nullable = nullable;
        this.columnType = columnType;
        this.remarks = remarks;
        this.columnDefault = columnDefault;
    }

    @Override
    public String getAliasCatalog() {
        return this.aliasCatalog;
    }

    @Override
    public void setAliasCatalog(String aliasCatalog) {
        this.aliasCatalog = aliasCatalog;
    }

    @Override
    public String getAliasSchema() {
        return this.aliasSchema;
    }

    @Override
    public void setAliasSchema(String aliasSchema) {
        this.aliasSchema = aliasSchema;
    }

    @Override
    public String getAliasName() {
        return this.aliasName;
    }

    @Override
    public void setAliasName(String aliasName) {
        this.aliasName = aliasName;
    }

    @Override
    public String getJavaClass() {
        return this.javaClass;
    }

    @Override
    public void setJavaClass(String javaClass) {
        this.javaClass = javaClass;
    }

    @Override
    public String getJavaMethod() {
        return this.javaMethod;
    }

    @Override
    public void setJavaMethod(String javaMethod) {
        this.javaMethod = javaMethod;
    }

    @Override
    public Integer getColumnCount() {
        return this.columnCount;
    }

    @Override
    public void setColumnCount(Integer columnCount) {
        this.columnCount = columnCount;
    }

    @Override
    public Integer getPos() {
        return this.pos;
    }

    @Override
    public void setPos(Integer pos) {
        this.pos = pos;
    }

    @Override
    public String getColumnName() {
        return this.columnName;
    }

    @Override
    public void setColumnName(String columnName) {
        this.columnName = columnName;
    }

    @Override
    public Integer getDataType() {
        return this.dataType;
    }

    @Override
    public void setDataType(Integer dataType) {
        this.dataType = dataType;
    }

    @Override
    public String getTypeName() {
        return this.typeName;
    }

    @Override
    public void setTypeName(String typeName) {
        this.typeName = typeName;
    }

    @Override
    public Integer getPrecision() {
        return this.precision;
    }

    @Override
    public void setPrecision(Integer precision) {
        this.precision = precision;
    }

    @Override
    public Short getScale() {
        return this.scale;
    }

    @Override
    public void setScale(Short scale) {
        this.scale = scale;
    }

    @Override
    public Short getRadix() {
        return this.radix;
    }

    @Override
    public void setRadix(Short radix) {
        this.radix = radix;
    }

    @Override
    public Short getNullable() {
        return this.nullable;
    }

    @Override
    public void setNullable(Short nullable) {
        this.nullable = nullable;
    }

    @Override
    public Short getColumnType() {
        return this.columnType;
    }

    @Override
    public void setColumnType(Short columnType) {
        this.columnType = columnType;
    }

    @Override
    public String getRemarks() {
        return this.remarks;
    }

    @Override
    public void setRemarks(String remarks) {
        this.remarks = remarks;
    }

    @Override
    public String getColumnDefault() {
        return this.columnDefault;
    }

    @Override
    public void setColumnDefault(String columnDefault) {
        this.columnDefault = columnDefault;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("FunctionColumns (");

        sb.append(aliasCatalog);
        sb.append(", ").append(aliasSchema);
        sb.append(", ").append(aliasName);
        sb.append(", ").append(javaClass);
        sb.append(", ").append(javaMethod);
        sb.append(", ").append(columnCount);
        sb.append(", ").append(pos);
        sb.append(", ").append(columnName);
        sb.append(", ").append(dataType);
        sb.append(", ").append(typeName);
        sb.append(", ").append(precision);
        sb.append(", ").append(scale);
        sb.append(", ").append(radix);
        sb.append(", ").append(nullable);
        sb.append(", ").append(columnType);
        sb.append(", ").append(remarks);
        sb.append(", ").append(columnDefault);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(IFunctionColumns from) {
        setAliasCatalog(from.getAliasCatalog());
        setAliasSchema(from.getAliasSchema());
        setAliasName(from.getAliasName());
        setJavaClass(from.getJavaClass());
        setJavaMethod(from.getJavaMethod());
        setColumnCount(from.getColumnCount());
        setPos(from.getPos());
        setColumnName(from.getColumnName());
        setDataType(from.getDataType());
        setTypeName(from.getTypeName());
        setPrecision(from.getPrecision());
        setScale(from.getScale());
        setRadix(from.getRadix());
        setNullable(from.getNullable());
        setColumnType(from.getColumnType());
        setRemarks(from.getRemarks());
        setColumnDefault(from.getColumnDefault());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends IFunctionColumns> E into(E into) {
        into.from(this);
        return into;
    }
}
