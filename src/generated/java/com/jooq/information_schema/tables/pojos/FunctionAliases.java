/*
 * This file is generated by jOOQ.
*/
package com.jooq.information_schema.tables.pojos;


import com.jooq.information_schema.tables.interfaces.IFunctionAliases;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FunctionAliases implements IFunctionAliases {

    private static final long serialVersionUID = -985551826;

    private String  aliasCatalog;
    private String  aliasSchema;
    private String  aliasName;
    private String  javaClass;
    private String  javaMethod;
    private Integer dataType;
    private String  typeName;
    private Integer columnCount;
    private Short   returnsResult;
    private String  remarks;
    private Integer id;
    private String  source;

    public FunctionAliases() {}

    public FunctionAliases(FunctionAliases value) {
        this.aliasCatalog = value.aliasCatalog;
        this.aliasSchema = value.aliasSchema;
        this.aliasName = value.aliasName;
        this.javaClass = value.javaClass;
        this.javaMethod = value.javaMethod;
        this.dataType = value.dataType;
        this.typeName = value.typeName;
        this.columnCount = value.columnCount;
        this.returnsResult = value.returnsResult;
        this.remarks = value.remarks;
        this.id = value.id;
        this.source = value.source;
    }

    public FunctionAliases(
        String  aliasCatalog,
        String  aliasSchema,
        String  aliasName,
        String  javaClass,
        String  javaMethod,
        Integer dataType,
        String  typeName,
        Integer columnCount,
        Short   returnsResult,
        String  remarks,
        Integer id,
        String  source
    ) {
        this.aliasCatalog = aliasCatalog;
        this.aliasSchema = aliasSchema;
        this.aliasName = aliasName;
        this.javaClass = javaClass;
        this.javaMethod = javaMethod;
        this.dataType = dataType;
        this.typeName = typeName;
        this.columnCount = columnCount;
        this.returnsResult = returnsResult;
        this.remarks = remarks;
        this.id = id;
        this.source = source;
    }

    @Override
    public String getAliasCatalog() {
        return this.aliasCatalog;
    }

    @Override
    public void setAliasCatalog(String aliasCatalog) {
        this.aliasCatalog = aliasCatalog;
    }

    @Override
    public String getAliasSchema() {
        return this.aliasSchema;
    }

    @Override
    public void setAliasSchema(String aliasSchema) {
        this.aliasSchema = aliasSchema;
    }

    @Override
    public String getAliasName() {
        return this.aliasName;
    }

    @Override
    public void setAliasName(String aliasName) {
        this.aliasName = aliasName;
    }

    @Override
    public String getJavaClass() {
        return this.javaClass;
    }

    @Override
    public void setJavaClass(String javaClass) {
        this.javaClass = javaClass;
    }

    @Override
    public String getJavaMethod() {
        return this.javaMethod;
    }

    @Override
    public void setJavaMethod(String javaMethod) {
        this.javaMethod = javaMethod;
    }

    @Override
    public Integer getDataType() {
        return this.dataType;
    }

    @Override
    public void setDataType(Integer dataType) {
        this.dataType = dataType;
    }

    @Override
    public String getTypeName() {
        return this.typeName;
    }

    @Override
    public void setTypeName(String typeName) {
        this.typeName = typeName;
    }

    @Override
    public Integer getColumnCount() {
        return this.columnCount;
    }

    @Override
    public void setColumnCount(Integer columnCount) {
        this.columnCount = columnCount;
    }

    @Override
    public Short getReturnsResult() {
        return this.returnsResult;
    }

    @Override
    public void setReturnsResult(Short returnsResult) {
        this.returnsResult = returnsResult;
    }

    @Override
    public String getRemarks() {
        return this.remarks;
    }

    @Override
    public void setRemarks(String remarks) {
        this.remarks = remarks;
    }

    @Override
    public Integer getId() {
        return this.id;
    }

    @Override
    public void setId(Integer id) {
        this.id = id;
    }

    @Override
    public String getSource() {
        return this.source;
    }

    @Override
    public void setSource(String source) {
        this.source = source;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("FunctionAliases (");

        sb.append(aliasCatalog);
        sb.append(", ").append(aliasSchema);
        sb.append(", ").append(aliasName);
        sb.append(", ").append(javaClass);
        sb.append(", ").append(javaMethod);
        sb.append(", ").append(dataType);
        sb.append(", ").append(typeName);
        sb.append(", ").append(columnCount);
        sb.append(", ").append(returnsResult);
        sb.append(", ").append(remarks);
        sb.append(", ").append(id);
        sb.append(", ").append(source);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(IFunctionAliases from) {
        setAliasCatalog(from.getAliasCatalog());
        setAliasSchema(from.getAliasSchema());
        setAliasName(from.getAliasName());
        setJavaClass(from.getJavaClass());
        setJavaMethod(from.getJavaMethod());
        setDataType(from.getDataType());
        setTypeName(from.getTypeName());
        setColumnCount(from.getColumnCount());
        setReturnsResult(from.getReturnsResult());
        setRemarks(from.getRemarks());
        setId(from.getId());
        setSource(from.getSource());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends IFunctionAliases> E into(E into) {
        into.from(this);
        return into;
    }
}
